datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model agencies {
  agency_id   String        @id
  agency_name String?
  collections collections[]
}

model collections {
  collection_id   String     @id
  collection_name String?
  agency_id       String?
  database_id     String?
  description     String?    @db.LongText
  agency          agencies?  @relation(fields: [agency_id], references: [agency_id], onDelete: NoAction, onUpdate: NoAction, map: "collection_agency_fkey")
  datasets        datasets[]
}

model datasets {
  dataset_id       String       @id
  dataset_name     String?
  collection_id    String?
  description      String?      @db.LongText
  reference_period String?
  collection       collections? @relation(fields: [collection_id], references: [collection_id], onDelete: NoAction, onUpdate: NoAction, map: "dataset_collection_fkey")
  variables        variables[]

  alternate table_matches[] @relation("alt_table")
  matches   table_matches[] @relation("match_table")
}

model variables {
  variable_id   String
  variable_name String?
  dataset_id    String
  description   String?  @db.LongText
  information   String?  @db.LongText
  primary_key   Boolean?
  type          String?
  size          Int?
  refreshes     String?
  dataset       datasets @relation(fields: [dataset_id], references: [dataset_id], onDelete: NoAction, onUpdate: NoAction, map: "variable_dataset_fkey")

  alternate variable_matches[] @relation("alt_variable")
  matches   variable_matches[] @relation("match_variable")

  @@id([variable_id, dataset_id], name: "v_id")
}

model table_matches {
  table        datasets @relation("alt_table", fields: [table_id], references: [dataset_id])
  table_id     String
  match        datasets @relation("match_table", fields: [alt_table_id], references: [dataset_id])
  alt_table_id String
  notes        String?

  @@id([table_id, alt_table_id])
}

model variable_matches {
  table_id        String
  variable        variables @relation("alt_variable", fields: [table_id, variable_id], references: [dataset_id, variable_id])
  variable_id     String
  match           variables @relation("match_variable", fields: [table_id, alt_variable_id], references: [dataset_id, variable_id])
  alt_variable_id String
  notes           String?

  @@id([table_id, variable_id, alt_variable_id])
}
